#####
# ragweed-selection
# Battlay et. al. 2022
# call variants
#####

# variant calling with GATK unified genotyper
cd ~/scratch/ragweed/

# list BAM files (n=359)
ls bam/*.bam > bam/bam-UG.list

# list the 19 'big' scaffolds; >1Mb in length
cat ref/ragweed-dipasm-hap1.fasta.fai | awk '$2 > 1000000 {print $1}' > UG-BIG-scafflist.txt

# list the 59 'small' scaffolds; <1Mb in length, but larger than 100000
cat ref/ragweed-dipasm-hap1.fasta.fai | awk '$2 < 1000000 {print $0}' | awk '$2 > 100000 {print $1}' > UG-SML-scafflist.txt

# array job to call variants on small scaffolds

# UG-SML.sh
#!/bin/bash
#SBATCH --job-name=UG-SML
#SBATCH --account=def-rieseber
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --mem-per-cpu=10G
#SBATCH --time=8:00:00
#SBATCH --output=UG-SML-%a.out
#SBATCH --error=UG-SML-%a.err
#SBATCH --array=1-59

cd ~/scratch/ragweed/

N=$SLURM_ARRAY_TASK_ID
scaff=$(cat UG-SML-scafflist.txt | head -n $N | tail -n 1)

module purge
module load nixpkgs/16.09
module load gatk/3.8

echo $scaff > $scaff.list

java -jar $EBROOTGATK/GenomeAnalysisTK.jar \
	-T UnifiedGenotyper \
	-nt 8 \
	-R ref/ragweed-dipasm-hap1.fasta \
	-I bam/bam-UG.list \
	-L $scaff.list \
	-glm BOTH \
	-o vcf-SML/$scaff.raw.vcf

###

# array job to call variants on a big scaffold in 1Mb windows

# UG-BIG-h1s1.sh
#!/bin/bash
#SBATCH --job-name=UG-BIG-h1s1
#SBATCH --account=def-rieseber
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --mem-per-cpu=10G
#SBATCH --time=12:00:00
#SBATCH --output=UG-BIG-h1s1-%a.out
#SBATCH --error=UG-BIG-h1s1-%a.err
#SBATCH --array=1-67

cd ~/scratch/ragweed/

scaff=h1s1
N=$SLURM_ARRAY_TASK_ID
start=$(((N-1)*1000000+1))
end=$((N*1000000))

module purge
module load nixpkgs/16.09
module load gatk/3.8

echo $scaff:$start-$end > $scaff-$N.list

java -jar $EBROOTGATK/GenomeAnalysisTK.jar \
	-T UnifiedGenotyper \
	-nt 8 \
	-R ref/ragweed-dipasm-hap1.fasta \
	-I bam/bam-UG.list \
	-L $scaff-$N.list \
	-glm BOTH \
	-o vcf-BIG/$scaff-$N.raw.vcf

###

# last part of a big scaffold; set scaffold end manually

# UG-BIG-h1s1-68.sh
#!/bin/bash
#SBATCH --job-name=UG-BIG-h1s1-68
#SBATCH --account=def-rieseber
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --mem-per-cpu=10G
#SBATCH --time=12:00:00
#SBATCH --output=UG-BIG-h1s1-68.out
#SBATCH --error=UG-BIG-h1s1-68.err

cd ~/scratch/ragweed/

scaff=h1s1
N=68
start=67000001
end=67187999

module purge
module load nixpkgs/16.09
module load gatk/3.8

echo $scaff:$start-$end > $scaff-$N.list

java -jar $EBROOTGATK/GenomeAnalysisTK.jar \
	-T UnifiedGenotyper \
	-nt 8 \
	-R ref/ragweed-dipasm-hap1.fasta \
	-I bam/bam-UG.list \
	-L $scaff-$N.list \
	-glm BOTH \
	-o vcf-BIG/$scaff-$N.raw.vcf

###

# check vcf parts are there
for i in h1s1 h1s2 h1s3 h1s4 h1s5 h1s6 h1s7 h1s8 h1s9 h1s10 h1s11 h1s12 h1s13 h1s14 h1s15 h1s16 h1s17 h1s18 h1s20
do
for j in {1..100}
do
ls vcf-BIG/$i-$j.raw.vcf.idx
done
done

# merge into single VCF
ls vcf-BIG/*.vcf > vcf-all.list
ls vcf-SML/*.vcf >> vcf-all.list
